VAR -> "^[a-z_][a-zA-Z0-9_]*$"
DIGIT -> "^\d*$"
ASSIGN_OP -> "^=$"
OP -> "^(-|\+|\*|/)$"
L_BC -> "^\($"
R_BC -> "^\)$"
ENDL -> "^;$"
COMPARE_OP -> "^(~|<|>|!=)$"

IF -> "^If$"
ELSE -> "^Else$"
WHILE -> "^While$"
DO -> "^Do$"
FOR -> "^For$"
DIV -> "^,$"
PRINT -> "^Print$"

lang -> expr+
expr -> body ENDL
body -> expr_assign | if_op | while_op | do_while_op | for_op | print
expr_value -> value (OP value)*
infinity -> L_BC expr_value R_BC
value -> (VAR | DIGIT) | infinity
condition -> VAR COMPARE_OP expr_value
condition_in_br -> L_BC condition R_BC
if_op -> IF condition_in_br body+ else_op?
else_op -> ELSE expr
while_op -> WHILE condition_in_br body+
do_while_op -> DO body+ WHILE condition_in_br
for_op -> FOR L_BC assign DIV condition DIV assign R_BC body+
expr_assign -> assign (DIV assign)*
assign -> VAR ASSIGN_OP expr_value
print -> PRINT (L_BC (VAR | DIGIT) R_BC)?
